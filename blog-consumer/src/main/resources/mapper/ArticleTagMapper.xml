<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hackyle.blog.consumer.mapper.ArticleTagMapper">

    <resultMap id="BaseResultMap" type="com.hackyle.blog.consumer.entity.ArticleTagEntity">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="tagId" column="tag_id" jdbcType="BIGINT"/>
            <result property="articleId" column="article_id" jdbcType="BIGINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="deleted" column="is_deleted" jdbcType="BIT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,tag_id,article_id,
        create_time,update_time,is_deleted
    </sql>

    <select id="selectByArticleIds" resultType="com.hackyle.blog.consumer.po.ArticleTagPo">
        SELECT a.article_id as articleId,
        b.id tagId, b.name, b.color
        FROM tr_article_tag a JOIN tb_tag b ON b.id = a.tag_id
        <where>
            a.article_id in
            <!-- foreach标签：遍历集合 -->
            <!-- collection：指定要遍历的集合 -->
            <!-- item：临时保存当前遍历出的元素，类似于for(int i=0; i<10; i++)中的i -->
            <!-- separator：每个元素之间的分割符 -->
            <!-- open：遍历出的所有结果拼接一个开始字符 -->
            <!-- close：遍历出的所有结果拼接一个结束符 -->
            <foreach collection="articleIds" item="id" separator=","
                     open="(" close=")" >
                <!-- #{i}: 取出元素 -->
                #{id}
            </foreach>
            AND a.is_deleted = false
        </where>
    </select>

    <!--List<ArticleTagPo> selectTag();-->
    <select id="selectTag" resultType="com.hackyle.blog.consumer.po.ArticleTagPo">
        SELECT at.tag_id, count(at.article_id) AS article_num,
               tag.name, tag.code, tag.description, tag.color, tag.create_time, tag.update_time
        FROM tr_article_tag at JOIN tb_tag tag ON at.tag_id = tag.id
        WHERE at.is_deleted=FALSE AND tag.is_deleted=FALSE
        GROUP BY at.tag_id
    </select>

    <!--TagEntity selectTagByTagCode(@Param("tagCode") String tagCode);-->
    <select id="selectTagByTagCode" resultType="com.hackyle.blog.consumer.entity.TagEntity">
        SELECT id, name, code, color, description, create_time, update_time, is_deleted
        FROM tb_tag WHERE code = #{tagCode} and is_deleted = FALSE
    </select>

    <!--List<Long> selectArticleByTag(@Param("tagCode") String tagCode);-->
    <select id="selectArticleByTag" resultType="long">
        SELECT at.article_id
        FROM tr_article_tag at JOIN tb_tag tag ON at.tag_id = tag.id
        WHERE at.is_deleted=FALSE AND tag.is_deleted=FALSE AND tag.code = #{tagCode}
    </select>

</mapper>
